# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := addon-darwin
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=addon-darwin' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DDAWN_ENABLE_BACKEND_NULL' \
	'-DDAWN_ENABLE_BACKEND_METAL' \
	'-DDAWN_NATIVE_SHARED_LIBRARY' \
	'-DDAWN_WIRE_SHARED_LIBRARY' \
	'-DWGPU_SHARED_LIBRARY' \
	'-DNAPI_DISABLE_CPP_EXCEPTIONS' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++1y \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-std=c++14 \
	-stdlib=libc++

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/include/node \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/src \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/deps/openssl/config \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/deps/openssl/openssl/include \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/deps/uv/include \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/deps/zlib \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/deps/v8/include \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/node_modules/node-addon-api \
	-I$(srcdir)/../../../lib/include \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/src/include \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/out/Shared/gen \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/out/Shared/gen/src/include \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/third_party/shaderc/libshaderc/include \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/third_party/shaderc/libshaderc/src/shaderc.cc \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/third_party/shaderc/libshaderc/src/shaderc_private.h

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=addon-darwin' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DDAWN_ENABLE_BACKEND_NULL' \
	'-DDAWN_ENABLE_BACKEND_METAL' \
	'-DDAWN_NATIVE_SHARED_LIBRARY' \
	'-DDAWN_WIRE_SHARED_LIBRARY' \
	'-DWGPU_SHARED_LIBRARY' \
	'-DNAPI_DISABLE_CPP_EXCEPTIONS' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-O3 \
	-gdwarf-2 \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++1y \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-std=c++14 \
	-stdlib=libc++

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/include/node \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/src \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/deps/openssl/config \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/deps/openssl/openssl/include \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/deps/uv/include \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/deps/zlib \
	-I/Users/runner/Library/Caches/node-gyp/13.14.0/deps/v8/include \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/node_modules/node-addon-api \
	-I$(srcdir)/../../../lib/include \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/src/include \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/out/Shared/gen \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/out/Shared/gen/src/include \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/third_party/shaderc/libshaderc/include \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/third_party/shaderc/libshaderc/src/shaderc.cc \
	-I/Users/runner/runners/2.262.1/work/webgpu/webgpu/dawn/third_party/shaderc/libshaderc/src/shaderc_private.h

OBJS := \
	$(obj).target/$(TARGET)/src/index.o \
	$(obj).target/$(TARGET)/src/BackendBinding.o \
	$(obj).target/$(TARGET)/src/DescriptorDecoder.o \
	$(obj).target/$(TARGET)/src/GPU.o \
	$(obj).target/$(TARGET)/src/GPUAdapter.o \
	$(obj).target/$(TARGET)/src/GPUBindGroup.o \
	$(obj).target/$(TARGET)/src/GPUBindGroupLayout.o \
	$(obj).target/$(TARGET)/src/GPUBuffer.o \
	$(obj).target/$(TARGET)/src/GPUCanvasContext.o \
	$(obj).target/$(TARGET)/src/GPUCommandBuffer.o \
	$(obj).target/$(TARGET)/src/GPUCommandEncoder.o \
	$(obj).target/$(TARGET)/src/GPUComputePassEncoder.o \
	$(obj).target/$(TARGET)/src/GPUComputePipeline.o \
	$(obj).target/$(TARGET)/src/GPUDevice.o \
	$(obj).target/$(TARGET)/src/GPUFence.o \
	$(obj).target/$(TARGET)/src/GPUPipelineLayout.o \
	$(obj).target/$(TARGET)/src/GPUQueue.o \
	$(obj).target/$(TARGET)/src/GPURayTracingAccelerationContainer.o \
	$(obj).target/$(TARGET)/src/GPURayTracingPassEncoder.o \
	$(obj).target/$(TARGET)/src/GPURayTracingPipeline.o \
	$(obj).target/$(TARGET)/src/GPURayTracingShaderBindingTable.o \
	$(obj).target/$(TARGET)/src/GPURenderBundle.o \
	$(obj).target/$(TARGET)/src/GPURenderBundleEncoder.o \
	$(obj).target/$(TARGET)/src/GPURenderPassEncoder.o \
	$(obj).target/$(TARGET)/src/GPURenderPipeline.o \
	$(obj).target/$(TARGET)/src/GPUSampler.o \
	$(obj).target/$(TARGET)/src/GPUShaderModule.o \
	$(obj).target/$(TARGET)/src/GPUSwapChain.o \
	$(obj).target/$(TARGET)/src/GPUTexture.o \
	$(obj).target/$(TARGET)/src/GPUTextureView.o \
	$(obj).target/$(TARGET)/src/NullBinding.o \
	$(obj).target/$(TARGET)/src/WebGPUWindow.o \
	$(obj).target/$(TARGET)/src/MetalBinding.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.mm FORCE_DO_CMD
	@$(call do_cmd,objcxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.mm FORCE_DO_CMD
	@$(call do_cmd,objcxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.mm FORCE_DO_CMD
	@$(call do_cmd,objcxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-Wl,-rpath,@loader_path \
	-framework Cocoa \
	-framework IOKit \
	-framework Metal \
	-framework QuartzCore \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.10 \
	-L/Users/runner/runners/2.262.1/work/webgpu/webgpu/generated/0.0.1/darwin/build/Release \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug := \
	-Wl,-rpath,@loader_path \
	-framework Cocoa \
	-framework IOKit \
	-framework Metal \
	-framework QuartzCore \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LDFLAGS_Release := \
	-Wl,-rpath,@loader_path \
	-framework Cocoa \
	-framework IOKit \
	-framework Metal \
	-framework QuartzCore \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.10 \
	-L/Users/runner/runners/2.262.1/work/webgpu/webgpu/generated/0.0.1/darwin/build/Release \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release := \
	-Wl,-rpath,@loader_path \
	-framework Cocoa \
	-framework IOKit \
	-framework Metal \
	-framework QuartzCore \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LIBS := \
	/Users/runner/runners/2.262.1/work/webgpu/webgpu/generated/0.0.1/darwin/build/Release/libdawn_native.dylib \
	/Users/runner/runners/2.262.1/work/webgpu/webgpu/generated/0.0.1/darwin/build/Release/libdawn_proc.dylib \
	/Users/runner/runners/2.262.1/work/webgpu/webgpu/generated/0.0.1/darwin/build/Release/libdawn_wire.dylib \
	/Users/runner/runners/2.262.1/work/webgpu/webgpu/generated/0.0.1/darwin/build/Release/libshaderc_spvc.dylib \
	/Users/runner/runners/2.262.1/work/webgpu/webgpu/generated/0.0.1/darwin/build/Release/libshaderc.dylib \
	/Users/runner/runners/2.262.1/work/webgpu/webgpu/generated/0.0.1/darwin/build/Release/libc++.dylib \
	/Users/runner/runners/2.262.1/work/webgpu/webgpu/generated/0.0.1/darwin/build/Release/../../../../../lib/darwin/x64/GLFW/libglfw3.a

$(builddir)/addon-darwin.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/addon-darwin.node: LIBS := $(LIBS)
$(builddir)/addon-darwin.node: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/addon-darwin.node: TOOLSET := $(TOOLSET)
$(builddir)/addon-darwin.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(builddir)/addon-darwin.node
# Add target alias
.PHONY: addon-darwin
addon-darwin: $(builddir)/addon-darwin.node

# Short alias for building this executable.
.PHONY: addon-darwin.node
addon-darwin.node: $(builddir)/addon-darwin.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/addon-darwin.node

